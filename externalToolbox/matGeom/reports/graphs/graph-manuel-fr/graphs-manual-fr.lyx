#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter courier
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 0
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Graphs : une bibliothèque de manipulation de graphes géométriques sous Matlab
\end_layout

\begin_layout Author
D.
 Legland
\end_layout

\begin_layout Abstract
En traitement d'images ou en modélisation, on est souvent amené à manipuler
 des structures de données qui sont bien représentées sous la forme de graphe.
 J'ai développé plusieurs fonctions sous matlab, que j'ai regroupées dans
 une bibliothèque relativement autonome.
 Ce document présente les structures de données utilisées, ainsi que les
 différentes fonctions disponibles.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Un graphe est constitué d'un ensemble de sommets ou noeuds, et d'un ensemble
 d'arêtes qui décrivent les relations entre ces noeuds.
 J'appelle graphe géométrique un graphe dont les sommets sont des points
 du plan ou de l'espace (on peut généraliser à des points de 
\begin_inset Formula $\mathbb{R}^{d}$
\end_inset

, mais je n'en ai pas encore eu l'utilité).
\end_layout

\begin_layout Subsection
Objectifs
\end_layout

\begin_layout Standard
La bibliothèque fournit des fonctions pour plusieurs types de problèmes
 :
\end_layout

\begin_layout Itemize
Génération de graphes (quelques modèles types, mais en fait la génération
 se fait le plus souvent à partir de données réelles)
\end_layout

\begin_layout Itemize
Modification de graphes existants : ajout et suppression de sommets ou d'arêtes,
 fusion de graphes, extraction de sous-graphes...
\end_layout

\begin_layout Itemize
Algorithmes classiques sur les graphes.
 Par exemple, test de planarité d'un graphe, colorabilité avec un nombre
 donné de couleurs, mesures telles que le diamètre, algorithme de Dijkstra...
\end_layout

\begin_layout Itemize
Caractérisation d'un graphe.
 Cette partie est peut-être plus spécifique.
 L'idée est de construire une application qui à un graphe donné associe
 une mesure, qui peut être un scalaire, un vecteur, une matrice...
\end_layout

\begin_layout Itemize
Opérations morphologiques sur des graphes valués
\end_layout

\begin_layout Itemize
Propagation de distances, et calcul de paramètres géodésiques (centre, diamètre...)
\end_layout

\begin_layout Subsection
Conventions de programmation
\end_layout

\begin_layout Standard
Quelques conventions utilisées pour la bibliothèque :
\end_layout

\begin_layout Itemize
les noms des fonctions suivent la convention 
\begin_inset Quotes fld
\end_inset

Java
\begin_inset Quotes frd
\end_inset

, ex : unNomDeFonction
\end_layout

\begin_layout Itemize
la langue utilisée est l'anglais (américain)
\end_layout

\begin_layout Itemize
les noms des fonctions commencent pour la plupart par 
\begin_inset Quotes fld
\end_inset

gr
\begin_inset Quotes frd
\end_inset

 (ex : grNeighborNode), ou alors contiennent le mot 
\begin_inset Quotes fld
\end_inset

graph
\begin_inset Quotes frd
\end_inset

 (ex : clipGraph, graphDiameter).
\end_layout

\begin_layout Itemize
on passe les infos sur le graphe en premier, puis les infos complémentaires
\end_layout

\begin_layout Section
Représentation des données
\end_layout

\begin_layout Standard
Un graphe peut être représenté de deux manière différentes.
 Soit en déclarant séparément les tableaux décrivant les sommets et les
 arêtes, soit en les regroupant dans une stucture de données.
\end_layout

\begin_layout Subsection
Variables séparées
\end_layout

\begin_layout Standard
Les différentes fonctions sur les graphes utilisent en général les deux
 premiers argument sous la forme :
\end_layout

\begin_layout Description
nodes un tableau contenant les coordonnées 
\begin_inset Formula $x$
\end_inset

 et 
\begin_inset Formula $y$
\end_inset

 (éventuellement 
\begin_inset Formula $z$
\end_inset

 pour les graphes 3D) de chaque sommet.
 Chaque sommet est identifié par son indice, qui correspond à sa ligne dans
 le tableau des sommets.
\end_layout

\begin_layout Description
edges un tableau de 
\begin_inset Formula $2$
\end_inset

 colonnes et d'autant de lignes que d'arêtes contenant pour chaque arête,
 l'indice du sommet source et l'indice du sommet cible.
 Pour les graphes non orientés, on prend comme convention de placer l'indice
 le plus faible en premier.
 De plus, les arêtes sont triées en fonction de la valeur du premier indice.
\end_layout

\begin_layout Standard
Enfin, il est possible de considérer les faces du graphe, voire les cellules
 du solide associé.
 On s'écarte de la définition de graphe pour considérer plutôt des complexes
 cellulaires euclidiens, mais c'est assez pratique pour manipuler des polyèdres,
 ou des tessellations (telles que Voronoï).
\end_layout

\begin_layout Description
faces un tableau de cellules, dans lequel chaque cellule contient les indices
 des sommets d'une face.
 Si le polyèdre est régulier, toutes les faces ont le même nombre de sommets,
 et on peut utiliser un tableau numérique avec un nombre fixe de colonnes.
\end_layout

\begin_layout Description
cells un tableau de cellules, dans lequel chaque cellule contient les indices
 des faces de chaque volume.
 Là aussi, pour des maillages réguliers (tétraèdriques ou hexaédriques par
 exemple), on peut remplacer par un tableau numérique avec un nombre fie
 de colonnes.
\end_layout

\begin_layout Subsection
Structure de données
\end_layout

\begin_layout Standard
Certaines fonctions acceptent une structure de données, qui contient les
 champs suivants (ceux avec une étoile sont optionnels) :
\end_layout

\begin_layout Description
nodes un tableau contenant les coordonnées des sommets
\end_layout

\begin_layout Description
edges un tableau contenant les indices des sommets de départ et de fin de
 chaque arête
\end_layout

\begin_layout Description
*faces le tableau des indices de sommets pour chaque face
\end_layout

\begin_layout Description
*cells le tableau des indices de faces pour chaque cellule
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Création de graphes
\end_layout

\begin_layout Standard
Quelques fonctions qui créent un graphe, à partir d'un ensemble de points,
 ou à partir d'une image.
\end_layout

\begin_layout Subsection
Graphes géométriques
\end_layout

\begin_layout Standard
Ces fonctions créent un graphe à partir d'un ensemble de points.
\end_layout

\begin_layout Subsubsection
knnGraph
\end_layout

\begin_layout Standard
Crée le graphe des 
\begin_inset Formula $k$
\end_inset

 plus proches voisins d'un ensemble de points.
\end_layout

\begin_layout Subsubsection
delaunayGraph
\end_layout

\begin_layout Standard
Calcule la triangulation de Delaunay d'un ensemble de points, extrait les
 arêtes, et renvoie le graphe associé.
 Fonctionne aussi si les points sont de dimension supérieure à 2.
 Permet de générer rapidement des graphes 
\begin_inset Quotes fld
\end_inset

quelconques
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subsubsection
euclideanMST 
\end_layout

\begin_layout Standard
Crée l'arbre couvrant de poids minimal d'un ensemble de points (utilise
 la fonction prim_mst).
 Le poids attribué à chaque arêtes correspond à la distance euclidienne
 de ses sommets.
\end_layout

\begin_layout Subsubsection
prim_mst
\end_layout

\begin_layout Standard
Calcule un arbre couvrant de poids minimal (Minimal Spanning Tree) par l'algorit
hme de Prim.
 Cette fonction prend en entrée un tableau d'arêtes, et les poids associés,
 et renvoie le tableau d'arêtes correspondant à l'arbre.
\end_layout

\begin_layout Subsection
Création à partir d'une image
\end_layout

\begin_layout Standard
Ces fonctions prennent en entrée une image, en général binaire, et renvoient
 une structure de graphe, qui peut être utlisée pour visualiser ou appliquer
 d'autres types de traitements sur l'image.
\end_layout

\begin_layout Standard
Il existe aussi la fonction 
\family typewriter
imRAG
\family default
, qui calcule le graphe d'adjacence d'une image labelisée, et qui est présente
 dans le module imMeasures de la bibliothèque IMAEL.
\end_layout

\begin_layout Subsubsection
imageGraph
\end_layout

\begin_layout Standard
Crée le graphe équivalent d'une image : les pixels sont associés aux sommets,
 les pixels adjacents sont associés aux arêtes, et les faces peuvent être
 créées à partir des groupes de pixels adjacents.
\end_layout

\begin_layout Subsubsection
boundaryGraph
\end_layout

\begin_layout Standard
Renvoie la frontière d'une image binaire sous la forme d'un graphe.
\end_layout

\begin_layout Subsubsection
gcontour2d
\end_layout

\begin_layout Standard
Crée un graphe 2D (sommets, arêtes et faces) à partir d'une image 2D binaire.
 Permet de dessiner le contour des pixels de manière vectorielle.
\end_layout

\begin_layout Subsubsection
gcontour3d 
\end_layout

\begin_layout Standard
Crée un graphe 3D (sommets, arêtes et faces) à partir d'une image 3D binaire.
 Permet de dessiner le contour des voxels de manière vectorielle.
\end_layout

\begin_layout Subsubsection
vectorize
\end_layout

\begin_layout Standard
Transforme un squelette binaire en un graphe, en chaînant les pixels adjacents.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Manipulation de graphes
\end_layout

\begin_layout Subsection
Extraction d'informations
\end_layout

\begin_layout Standard
Fonctions pour calculer quelques paramètres decriptifs simples d'un graphe.
\end_layout

\begin_layout Subsubsection
grNodeDegree
\end_layout

\begin_layout Standard
Renvoie le degré d'un sommet, c'est à dire le nombre d'arêtes connectées
 à ce sommet.
 On considère que le graphe n'est pas orienté.
\end_layout

\begin_layout Subsubsection
grNodeInnerDegree
\end_layout

\begin_layout Standard
Renvoie le degré entrant d'un sommet, c'est à dire le nombre d'arêtes qui
 arrivent sur ce sommet.
 On considère que le graphe est orienté.
\end_layout

\begin_layout Subsubsection
grNodeOuterDegree
\end_layout

\begin_layout Standard
Renvoie le degré sortant d'un sommet, c'est à dire le nombre d'arêtes qui
 émanent sur ce sommet.
 On considère que le graphe est orienté.
\end_layout

\begin_layout Subsubsection
grNeighborNodes 
\end_layout

\begin_layout Standard
Renvoie l'ensemble des sommets adjacents à un sommet donné, dans un graphe
 non orienté.
\end_layout

\begin_layout Subsubsection
grNeighborEdges
\end_layout

\begin_layout Standard
Renvoie l'ensemble des arêtes adjacentes à un sommet donné, dans un graphe
 non orienté.
\end_layout

\begin_layout Subsubsection
grOppositeNode
\end_layout

\begin_layout Standard
Renvoie le sommet opposé à un sommet donné dans une arête.
 La fonction prend comme arguments une arête et un indice de sommet, et
 renvoie l'indice du sommet opposé dans cette arête.
\end_layout

\begin_layout Subsubsection
grLabel
\end_layout

\begin_layout Standard
Calcule un label unique pour chaque composante connexe du graphe.
 Le résultat est un tableau de labels avec autant d'éléments que le nombre
 de sommets, contenant le labels associé à chaque sommet.
\end_layout

\begin_layout Subsection
Opérations de bas niveau
\end_layout

\begin_layout Standard
Quelques opérations élémentaires de transformations de graphes.
 Les sommets et les arêtes sont identifiés par leur(s) indice(s) dans les
 tableaux de données.
\end_layout

\begin_layout Subsubsection
grRemoveNode 
\end_layout

\begin_layout Standard
Supprime un sommet du graphe, ainsi que l'ensemble des arêtes connectées
 à ce sommet.
\end_layout

\begin_layout Subsubsection
grRemoveNodes 
\end_layout

\begin_layout Standard
Supprime plusieurs sommets d'un graphe, ainsi que l'ensemble des arêtes
 connectées à un ou plusieurs de ces sommets.
\end_layout

\begin_layout Subsubsection
grRemoveEdge 
\end_layout

\begin_layout Standard
Supprime une arête dans un graphe.
\end_layout

\begin_layout Subsubsection
grRemoveEdges 
\end_layout

\begin_layout Standard
Supprime plusieurs arêtes dans un graphe.
\end_layout

\begin_layout Subsubsection
addSquareFace
\end_layout

\begin_layout Standard
Ajoute une face carrée à un graphe.
 La face est déterminée par l'ensemble des indices des sommets.
 Les arêtes associées sont ajoutées aussi si nécessaire.
\end_layout

\begin_layout Subsection
Opérations générales
\end_layout

\begin_layout Standard
Plusieurs fonctions de fusion ou de simplification de graphes, qui ne font
 intervenir que la topologie du graphe (on n'utilise pas les coordonnées
 des points).
\end_layout

\begin_layout Subsubsection
mergeGraphs 
\end_layout

\begin_layout Standard
Fusionne deux graphes, en raboutant les différents tableaux de données,
 et en convertissant les indices des tableaux des arêtes et des faces.
\end_layout

\begin_layout Subsubsection
grMergeNodes
\end_layout

\begin_layout Standard
Fusionne plusieurs sommets dans un graphe, et convertit les références des
 arêtes.
\end_layout

\begin_layout Subsubsection
grMergeMultipleNodes
\end_layout

\begin_layout Standard
Simplifie un graphe en supprimant les sommets multiples, ainsi que les arêtes
 multiples créées par ce processus.
\end_layout

\begin_layout Subsubsection
grMergeMultipleEdges
\end_layout

\begin_layout Standard
Supprime les arêtes 
\begin_inset Quotes fld
\end_inset

doubles
\begin_inset Quotes frd
\end_inset

, qui partagent les mêmes sommets de départ et d'arrivée, pour n'en garder
 qu'une.
 Si on a évité d'avoir des boucles (même sommet de départ et d'arrivée),
 on obtient un graphe simple.
\end_layout

\begin_layout Subsubsection
grSimplifyBranches
\end_layout

\begin_layout Standard
Supprime les sommets de degré 2 dans un graphe, ce qui a pour effet de remplacer
 toutes les 
\begin_inset Quotes fld
\end_inset

branches
\begin_inset Quotes frd
\end_inset

 par une arête simple.
 
\end_layout

\begin_layout Standard
Utilisation : dans le cas d'un graphe obtenu après squeletisation d'une
 image, le résultat est un graphe avec la même topologie, mais minimal.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Opérations particulières
\end_layout

\begin_layout Subsection
Filtrage sur les sommets d'un graphe
\end_layout

\begin_layout Standard
Ces fonctions travaillents sur des graphes valués.
 Pour chaque sommet, elles récupèrent les valeurs du sommet et de ses voisins,
 et appliquent un traitement mathématique.
\end_layout

\begin_layout Subsubsection
grMean 
\end_layout

\begin_layout Standard
Calcule la moyenne sur les étiquettes des voisins.
\end_layout

\begin_layout Subsubsection
grMedian 
\end_layout

\begin_layout Standard
Calcule la médiane sur les étiquettes des voisins.
\end_layout

\begin_layout Subsubsection
grDilate
\end_layout

\begin_layout Standard
Calcule une dilatation morphologique sur les étiquettes des voisins.
 Équivalent à calculer la valeur max des valeurs du voisinage.
\end_layout

\begin_layout Subsubsection
grErode 
\end_layout

\begin_layout Standard
Calcule une érosion morphologique sur les étiquettes des voisins.
 Équivalent à calculer la valeur min des valeurs du voisinage.
\end_layout

\begin_layout Subsubsection
grOpen 
\end_layout

\begin_layout Standard
Calcule une ouverture morphologique sur les étiquettes des voisins.
\end_layout

\begin_layout Subsubsection
grClose
\end_layout

\begin_layout Standard
Calcule une fermeture morphologique sur les étiquettes des voisins.
\end_layout

\begin_layout Subsection
Propagation de distances
\end_layout

\begin_layout Standard
Application des distances géodésiques pour des graphes.
 Les valeurs de distance sont associées aux arêtes du graphe, avec une pondérati
on égale à 1 par défaut si possible.
\end_layout

\begin_layout Subsubsection
grPropagateDistance 
\end_layout

\begin_layout Standard
Calcule la distance minimum entre chaque sommet du graphe et le sommet dont
 l'indice est donné en paramètre.
 La distance est calculée en sommant les poids associés aux arêtes du chemin
 entre les sommets.
\end_layout

\begin_layout Subsubsection
grVertexEccentricity 
\end_layout

\begin_layout Standard
Calcule l'excentricité (maximum de la fonction distance) des sommets dont
 les indices sont passés en argument.
\end_layout

\begin_layout Subsubsection
graphDiameter 
\end_layout

\begin_layout Standard
Calcule le diamètre géodésique du graphe, c'est à dire la distance maximale
 existant entre deux sommets du graphe.
 
\end_layout

\begin_layout Subsubsection
graphCenter 
\end_layout

\begin_layout Standard
Calcule le centre géodésique du graphe, sous la forme des indices des sommets
 dont l'excentricité est minimale.
\end_layout

\begin_layout Subsubsection
graphRadius
\end_layout

\begin_layout Standard
Calcule le rayon du graphe, c'est à dire le minimum de la fonction distance
 calculée pour l'ensemble des sommets du graphe.
\end_layout

\begin_layout Subsubsection
graphPeripheralVertices
\end_layout

\begin_layout Standard
Calcule les sommets périphériques, sous la forme des indices des sommets
 dont l'excentricité est maximale.
\end_layout

\begin_layout Subsection
Opérations sur les graphes géométriques
\end_layout

\begin_layout Standard
Ces opérations utilisent le fait que les sommets sont des points 2D ou 3D.
\end_layout

\begin_layout Subsubsection
grMergeNodesMedian
\end_layout

\begin_layout Standard
Fusionne plusieurs sommets dans un graphe, en utilisant comme sommet résultat
 un sommet dont les coordonnées sont les médianes des coordonnées des sommets
 d'entrée.
 Convertit les références des arêtes.
\end_layout

\begin_layout Subsubsection
grRemoveMultiplePoints
\end_layout

\begin_layout Standard
Supprime des amas de sommets dans un graphe.
 Les amas sont des groupes de points proches et fortement connectés.
\end_layout

\begin_layout Subsubsection
clipGraph 
\end_layout

\begin_layout Standard
Calcule l'intersection du graphe géométrique avec une boîte.
\end_layout

\begin_layout Subsubsection
graph2Contours 
\end_layout

\begin_layout Standard
Convertit un graphe en un ensemble de contours.
\end_layout

\begin_layout Subsubsection
grFaceToPolygon (ex-getGraphFace)
\end_layout

\begin_layout Standard
Renvoie une face dans un graphe sous la forme d'un polygone 2D ou 3D.
\end_layout

\begin_layout Subsection
Diagrammes de Voronoï
\end_layout

\begin_layout Standard
Quelques fonctions d'adaptation pour manipuler des résultats de calcul de
 diagramme de Voronoï sous forme de graphe.
\end_layout

\begin_layout Subsubsection
voronoi2d
\end_layout

\begin_layout Standard
Calcule un diagramme de Voronoï dans le plan et renvoie le résultat sous
 la forme d'un graphe géométrique 2D.
\end_layout

\begin_layout Subsubsection
boundedVoronoi2d
\end_layout

\begin_layout Standard
Calcule un diagramme de Voronoï dans le plan et renvoie le résultat sous
 la forme d'un graphe géométrique 2D.
 Le diagramme est borné par une boîte (coordonnées min et max dans chaque
 direction), ce qui permet d'avoir un résultat contenant uniquement des
 faces bornées.
\end_layout

\begin_layout Subsubsection
centroidalVoronoi2d 
\end_layout

\begin_layout Standard
Crée un diagramme de Voronoï centroïdal dans le plan.
\end_layout

\begin_layout Subsubsection
cvtUpdate
\end_layout

\begin_layout Standard
Fonction utilitaire qui met à jour les coordonnées des germes du diagramme
 en fonction des points donnés en paramètre.
\end_layout

\begin_layout Subsubsection
cvtIterate 
\end_layout

\begin_layout Standard
Fonction utilitaire qui met à jour les coordonnées des germes du diagramme
 en tirant des points aléatoirement selon une densité donnée en paramètre.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Fonctions d'affichage
\end_layout

\begin_layout Standard
La bibliothèque propose enfin de nombreuses fonctions pour afficher les
 graphes, ou des informations sur le graphe.
\end_layout

\begin_layout Subsection
Affichage de graphes
\end_layout

\begin_layout Standard
Ces fonctions affichent un graphe, ou seulement une partie des éléments
 du graphe.
\end_layout

\begin_layout Subsubsection
drawGraph 
\end_layout

\begin_layout Standard
Dessine un graphe dans la fenêtre courante.
\end_layout

\begin_layout Subsubsection
drawGraphEdges 
\end_layout

\begin_layout Standard
Dessine les arêtes d'un graphe dans la fenêtre courante.
\end_layout

\begin_layout Subsubsection
drawGraphFaces 
\end_layout

\begin_layout Standard
Dessine les faces d'un graphe dans la fenêtre courante.
\end_layout

\begin_layout Subsubsection
drawDigraph 
\end_layout

\begin_layout Standard
Dessine un graphe bipartite, donné comme deux listes de sommets, et une
 liste d'arêtes qui associent un sommet de la liste de départ à un sommet
 de la liste d'arrivée.
\end_layout

\begin_layout Subsubsection
drawDirectedEdges
\end_layout

\begin_layout Standard
Dessine des arêtes orientées (avec une flèche au milieu) dans la fenêtre
 courante.
\end_layout

\begin_layout Subsection
Affichage d'informations sur le graphe
\end_layout

\begin_layout Standard
Ces fonctions affichent des informations associées à un graphe.
\end_layout

\begin_layout Subsubsection
drawEdgeLabels
\end_layout

\begin_layout Standard
Affiche les étiquettes associées à chaque arête.
\end_layout

\begin_layout Subsubsection
drawNodeLabels 
\end_layout

\begin_layout Standard
Affiche les étiquettes associées à chaque sommet.
\end_layout

\begin_layout Subsubsection
drawSquareMesh 
\end_layout

\begin_layout Standard
Dessine un graphe avec uniquement des faces carrées.
\end_layout

\begin_layout Subsubsection
patchGraph 
\end_layout

\begin_layout Standard
Transforme un graphe 3D en patch Matlab.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Tests et calibration
\end_layout

\begin_layout Subsection
Graphes exemples
\end_layout

\begin_layout Standard
Quelques graphes de démo utilisés pour tester les algorithmes.
\end_layout

\begin_layout Subsubsection
createTestGraph01
\end_layout

\begin_layout Standard
Constitué de 8 sommets et 10 arêtes, dans une fenêtre [0 500 0 400].
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/testGraph01_w400.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Graphe de test numéro 1
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
createTestGraph02
\end_layout

\begin_layout Standard
Constituté de 12 sommets et 12 arêtes, dans une fenêtre [0 100 10 90].
 Utilisé pour tester le calcul du diamètre et du rayon d'un graphe.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/testGraph02_w400.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Graphe de test numéro 2
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
createTestGraph03
\end_layout

\begin_layout Standard
12 sommets et 13 arêtes, dans une fenêtre [0 150 0 100].
 Utilisé pour tester des chemins géodésiques.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/testGraph03_w400.png
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Graphe de test numéro 3
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
